
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNleftNEleftLTGTleftPLUSMINUSleftTIMESDIVIDErightPARLleftPARRAND ARRAY ASSIGN BEGIN BOOL COLON COMMA COMMENT CUBE DIVIDE DO DOT DWHILE ELSE END ENDDO ENDF ENDIF ENDP ENDW EQ FLOAT FOR GOSUB GT ID IF IN INPUT INT LT MATRIX MINUS NE NUMBER OR PARL PARR PLUS PRINT PROCEDURE PROGRAM SQBL SQBR STRING TIMES VAR WHILE newline program : PROGRAM COLON V MAIN P B END MAIN : empty V : V VAR VM COLON TIPO\n    | empty VM : ID VM2 VM2 : COMMA ID VM2VM2 : empty TIPO : FLOAT\n    | INT\n    | ARRAY\n    | MATRIX\n    | CUBE\n    | BOOL P : P  AUXPOSP PROCEDURE ID COLON B ENDP P : empty AUXPOSP : empty B : BEGIN COLON ST  ST : S ST\n    | empty S : FOR ID IN ID COLON ST ENDF\n    | DO COLON ST DWHILE COLON CONDITION ENDDO\n     S : GOSUB IDS : PRINT PARL SID PARRSID : SID PLUS SID_TSID : SID_TSID_T : STRING\n    | IDSID : emptyCMP : IDS : INPUT PARL ID PARR S : CMP ASSIGN UPDATEUPDATE : T UPDATE : UPDATE PLUS T\n    | UPDATE MINUS T\n    | UPDATE OR TT : FT : T TIMES F\n    | T DIVIDE F\n    | T AND F\n    F : IDF : NUMBERF : PARL CONDITION PARRS : IF CONDITION AUXCOLON ST ENDIFS : IF CONDITION AUXCOLON ST ELSE COLON AUXQ ST AUXENDIF ENDIFAUXQ : emptyAUXENDIF : empty S : WHILE AUXWHILE CONDITION AUXCOLON ST AUXENDWHILE ENDWAUXWHILE : emptyAUXENDWHILE : emptyCONDITION : UPDATECONDITION : UPDATE NE UPDATE\n    | UPDATE GT UPDATE\n    | UPDATE LT UPDATE\n    | UPDATE EQ UPDATEAUXCOLON : COLON empty :\t'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,21,],[0,-1,]),'COLON':([2,11,12,15,18,20,31,32,38,45,54,55,56,57,58,59,86,88,89,94,95,96,97,98,99,100,101,102,103,104,110,],[3,17,-56,23,-5,-7,-56,46,49,-6,74,-50,-32,-36,-40,-41,74,106,107,-51,-52,-53,-54,-33,-34,-35,-37,-38,-39,-42,114,]),'VAR':([3,4,5,24,25,26,27,28,29,30,],[-56,7,-4,-3,-8,-9,-10,-11,-12,-13,]),'BEGIN':([3,4,5,6,8,9,10,24,25,26,27,28,29,30,46,87,],[-56,-56,-4,-56,-2,15,-15,-3,-8,-9,-10,-11,-12,-13,15,-14,]),'PROCEDURE':([3,4,5,6,8,9,10,14,16,24,25,26,27,28,29,30,87,],[-56,-56,-4,-56,-2,-56,-15,22,-16,-3,-8,-9,-10,-11,-12,-13,-14,]),'ID':([7,19,22,23,34,36,39,43,44,49,50,51,52,53,56,57,58,59,60,61,62,64,72,73,74,75,76,77,78,79,80,81,82,83,84,90,91,92,98,99,100,101,102,103,104,105,106,107,109,114,117,118,119,120,121,125,],[12,31,32,37,37,48,50,58,-56,37,-22,70,71,58,-32,-36,-40,-41,58,58,-48,88,-31,37,-55,58,58,58,58,58,58,58,58,58,58,-23,70,-30,-33,-34,-35,-37,-38,-39,-42,37,37,58,-43,-56,-20,-21,37,-45,-47,-44,]),'COMMA':([12,31,],[19,19,]),'END':([13,23,33,34,35,47,50,56,57,58,59,72,90,92,98,99,100,101,102,103,104,109,117,118,121,125,],[21,-56,-17,-56,-19,-18,-22,-32,-36,-40,-41,-31,-23,-30,-33,-34,-35,-37,-38,-39,-42,-43,-20,-21,-47,-44,]),'FLOAT':([17,],[25,]),'INT':([17,],[26,]),'ARRAY':([17,],[27,]),'MATRIX':([17,],[28,]),'CUBE':([17,],[29,]),'BOOL':([17,],[30,]),'FOR':([23,34,49,50,56,57,58,59,72,73,74,90,92,98,99,100,101,102,103,104,105,106,109,114,117,118,119,120,121,125,],[36,36,36,-22,-32,-36,-40,-41,-31,36,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,36,36,-43,-56,-20,-21,36,-45,-47,-44,]),'DO':([23,34,49,50,56,57,58,59,72,73,74,90,92,98,99,100,101,102,103,104,105,106,109,114,117,118,119,120,121,125,],[38,38,38,-22,-32,-36,-40,-41,-31,38,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,38,38,-43,-56,-20,-21,38,-45,-47,-44,]),'GOSUB':([23,34,49,50,56,57,58,59,72,73,74,90,92,98,99,100,101,102,103,104,105,106,109,114,117,118,119,120,121,125,],[39,39,39,-22,-32,-36,-40,-41,-31,39,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,39,39,-43,-56,-20,-21,39,-45,-47,-44,]),'PRINT':([23,34,49,50,56,57,58,59,72,73,74,90,92,98,99,100,101,102,103,104,105,106,109,114,117,118,119,120,121,125,],[40,40,40,-22,-32,-36,-40,-41,-31,40,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,40,40,-43,-56,-20,-21,40,-45,-47,-44,]),'INPUT':([23,34,49,50,56,57,58,59,72,73,74,90,92,98,99,100,101,102,103,104,105,106,109,114,117,118,119,120,121,125,],[41,41,41,-22,-32,-36,-40,-41,-31,41,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,41,41,-43,-56,-20,-21,41,-45,-47,-44,]),'IF':([23,34,49,50,56,57,58,59,72,73,74,90,92,98,99,100,101,102,103,104,105,106,109,114,117,118,119,120,121,125,],[43,43,43,-22,-32,-36,-40,-41,-31,43,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,43,43,-43,-56,-20,-21,43,-45,-47,-44,]),'WHILE':([23,34,49,50,56,57,58,59,72,73,74,90,92,98,99,100,101,102,103,104,105,106,109,114,117,118,119,120,121,125,],[44,44,44,-22,-32,-36,-40,-41,-31,44,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,44,44,-43,-56,-20,-21,44,-45,-47,-44,]),'ENDP':([23,33,34,35,47,50,56,57,58,59,63,72,90,92,98,99,100,101,102,103,104,109,117,118,121,125,],[-56,-17,-56,-19,-18,-22,-32,-36,-40,-41,87,-31,-23,-30,-33,-34,-35,-37,-38,-39,-42,-43,-20,-21,-47,-44,]),'DWHILE':([34,35,47,49,50,56,57,58,59,65,72,90,92,98,99,100,101,102,103,104,109,117,118,121,125,],[-56,-19,-18,-56,-22,-32,-36,-40,-41,89,-31,-23,-30,-33,-34,-35,-37,-38,-39,-42,-43,-20,-21,-47,-44,]),'ENDIF':([34,35,47,50,56,57,58,59,72,73,74,90,92,93,98,99,100,101,102,103,104,109,114,117,118,119,120,121,122,123,124,125,],[-56,-19,-18,-22,-32,-36,-40,-41,-31,-56,-55,-23,-30,109,-33,-34,-35,-37,-38,-39,-42,-43,-56,-20,-21,-56,-45,-47,-56,125,-46,-44,]),'ELSE':([34,35,47,50,56,57,58,59,72,73,74,90,92,93,98,99,100,101,102,103,104,109,117,118,121,125,],[-56,-19,-18,-22,-32,-36,-40,-41,-31,-56,-55,-23,-30,110,-33,-34,-35,-37,-38,-39,-42,-43,-20,-21,-47,-44,]),'ENDW':([34,35,47,50,56,57,58,59,72,74,90,92,98,99,100,101,102,103,104,105,109,111,115,116,117,118,121,125,],[-56,-19,-18,-22,-32,-36,-40,-41,-31,-55,-23,-30,-33,-34,-35,-37,-38,-39,-42,-56,-43,-56,121,-49,-20,-21,-47,-44,]),'ENDF':([34,35,47,50,56,57,58,59,72,90,92,98,99,100,101,102,103,104,106,109,112,117,118,121,125,],[-56,-19,-18,-22,-32,-36,-40,-41,-31,-23,-30,-33,-34,-35,-37,-38,-39,-42,-56,-43,117,-20,-21,-47,-44,]),'ASSIGN':([37,42,],[-29,53,]),'PARL':([40,41,43,44,53,60,61,62,75,76,77,78,79,80,81,82,83,84,107,],[51,52,60,-56,60,60,60,-48,60,60,60,60,60,60,60,60,60,60,60,]),'NUMBER':([43,44,53,60,61,62,75,76,77,78,79,80,81,82,83,84,107,],[59,-56,59,59,59,-48,59,59,59,59,59,59,59,59,59,59,59,]),'IN':([48,],[64,]),'STRING':([51,91,],[69,69,]),'PARR':([51,55,56,57,58,59,66,67,68,69,70,71,85,94,95,96,97,98,99,100,101,102,103,104,108,],[-56,-50,-32,-36,-40,-41,90,-25,-28,-26,-27,92,104,-51,-52,-53,-54,-33,-34,-35,-37,-38,-39,-42,-24,]),'PLUS':([51,55,56,57,58,59,66,67,68,69,70,72,94,95,96,97,98,99,100,101,102,103,104,108,],[-56,79,-32,-36,-40,-41,91,-25,-28,-26,-27,79,79,79,79,79,-33,-34,-35,-37,-38,-39,-42,-24,]),'ENDDO':([55,56,57,58,59,94,95,96,97,98,99,100,101,102,103,104,113,],[-50,-32,-36,-40,-41,-51,-52,-53,-54,-33,-34,-35,-37,-38,-39,-42,118,]),'NE':([55,56,57,58,59,98,99,100,101,102,103,104,],[75,-32,-36,-40,-41,-33,-34,-35,-37,-38,-39,-42,]),'GT':([55,56,57,58,59,98,99,100,101,102,103,104,],[76,-32,-36,-40,-41,-33,-34,-35,-37,-38,-39,-42,]),'LT':([55,56,57,58,59,98,99,100,101,102,103,104,],[77,-32,-36,-40,-41,-33,-34,-35,-37,-38,-39,-42,]),'EQ':([55,56,57,58,59,98,99,100,101,102,103,104,],[78,-32,-36,-40,-41,-33,-34,-35,-37,-38,-39,-42,]),'MINUS':([55,56,57,58,59,72,94,95,96,97,98,99,100,101,102,103,104,],[80,-32,-36,-40,-41,80,80,80,80,80,-33,-34,-35,-37,-38,-39,-42,]),'OR':([55,56,57,58,59,72,94,95,96,97,98,99,100,101,102,103,104,],[81,-32,-36,-40,-41,81,81,81,81,81,-33,-34,-35,-37,-38,-39,-42,]),'TIMES':([56,57,58,59,98,99,100,101,102,103,104,],[82,-36,-40,-41,82,82,82,-37,-38,-39,-42,]),'DIVIDE':([56,57,58,59,98,99,100,101,102,103,104,],[83,-36,-40,-41,83,83,83,-37,-38,-39,-42,]),'AND':([56,57,58,59,98,99,100,101,102,103,104,],[84,-36,-40,-41,84,84,84,-37,-38,-39,-42,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'V':([3,],[4,]),'empty':([3,4,6,9,12,23,31,34,44,49,51,73,105,106,111,114,119,122,],[5,8,10,16,20,35,20,35,62,35,68,35,35,35,116,120,35,124,]),'MAIN':([4,],[6,]),'P':([6,],[9,]),'VM':([7,],[11,]),'B':([9,46,],[13,63,]),'AUXPOSP':([9,],[14,]),'VM2':([12,31,],[18,45,]),'TIPO':([17,],[24,]),'ST':([23,34,49,73,105,106,119,],[33,47,65,93,111,112,122,]),'S':([23,34,49,73,105,106,119,],[34,34,34,34,34,34,34,]),'CMP':([23,34,49,73,105,106,119,],[42,42,42,42,42,42,42,]),'CONDITION':([43,60,61,107,],[54,85,86,113,]),'UPDATE':([43,53,60,61,75,76,77,78,107,],[55,72,55,55,94,95,96,97,55,]),'T':([43,53,60,61,75,76,77,78,79,80,81,107,],[56,56,56,56,56,56,56,56,98,99,100,56,]),'F':([43,53,60,61,75,76,77,78,79,80,81,82,83,84,107,],[57,57,57,57,57,57,57,57,57,57,57,101,102,103,57,]),'AUXWHILE':([44,],[61,]),'SID':([51,],[66,]),'SID_T':([51,91,],[67,108,]),'AUXCOLON':([54,86,],[73,105,]),'AUXENDWHILE':([111,],[115,]),'AUXQ':([114,],[119,]),'AUXENDIF':([122,],[123,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM COLON V MAIN P B END','program',7,'p_program','MathPi.py',25),
  ('MAIN -> empty','MAIN',1,'p_MAIN','MathPi.py',28),
  ('V -> V VAR VM COLON TIPO','V',5,'p_V','MathPi.py',39),
  ('V -> empty','V',1,'p_V','MathPi.py',40),
  ('VM -> ID VM2','VM',2,'p_VM','MathPi.py',44),
  ('VM2 -> COMMA ID VM2','VM2',3,'p_VM2','MathPi.py',51),
  ('VM2 -> empty','VM2',1,'p_VM2_empty','MathPi.py',58),
  ('TIPO -> FLOAT','TIPO',1,'p_TIPO','MathPi.py',63),
  ('TIPO -> INT','TIPO',1,'p_TIPO','MathPi.py',64),
  ('TIPO -> ARRAY','TIPO',1,'p_TIPO','MathPi.py',65),
  ('TIPO -> MATRIX','TIPO',1,'p_TIPO','MathPi.py',66),
  ('TIPO -> CUBE','TIPO',1,'p_TIPO','MathPi.py',67),
  ('TIPO -> BOOL','TIPO',1,'p_TIPO','MathPi.py',68),
  ('P -> P AUXPOSP PROCEDURE ID COLON B ENDP','P',7,'p_P','MathPi.py',82),
  ('P -> empty','P',1,'p_P_empty','MathPi.py',91),
  ('AUXPOSP -> empty','AUXPOSP',1,'p_AUXPOSP','MathPi.py',96),
  ('B -> BEGIN COLON ST','B',3,'p_B','MathPi.py',104),
  ('ST -> S ST','ST',2,'p_ST','MathPi.py',108),
  ('ST -> empty','ST',1,'p_ST','MathPi.py',109),
  ('S -> FOR ID IN ID COLON ST ENDF','S',7,'p_S','MathPi.py',115),
  ('S -> DO COLON ST DWHILE COLON CONDITION ENDDO','S',7,'p_S','MathPi.py',116),
  ('S -> GOSUB ID','S',2,'p_S_GOSUB','MathPi.py',121),
  ('S -> PRINT PARL SID PARR','S',4,'p_S_PRINT','MathPi.py',130),
  ('SID -> SID PLUS SID_T','SID',3,'p_SID','MathPi.py',137),
  ('SID -> SID_T','SID',1,'p_SID2','MathPi.py',141),
  ('SID_T -> STRING','SID_T',1,'p_SID_T','MathPi.py',145),
  ('SID_T -> ID','SID_T',1,'p_SID_T','MathPi.py',146),
  ('SID -> empty','SID',1,'p_SID2_empty','MathPi.py',157),
  ('CMP -> ID','CMP',1,'p_CMP','MathPi.py',167),
  ('S -> INPUT PARL ID PARR','S',4,'p_S_INPUT','MathPi.py',173),
  ('S -> CMP ASSIGN UPDATE','S',3,'p_S_ASSIGN','MathPi.py',194),
  ('UPDATE -> T','UPDATE',1,'p_update','MathPi.py',199),
  ('UPDATE -> UPDATE PLUS T','UPDATE',3,'p_update2','MathPi.py',203),
  ('UPDATE -> UPDATE MINUS T','UPDATE',3,'p_update2','MathPi.py',204),
  ('UPDATE -> UPDATE OR T','UPDATE',3,'p_update2','MathPi.py',205),
  ('T -> F','T',1,'p_T','MathPi.py',210),
  ('T -> T TIMES F','T',3,'p_T2','MathPi.py',214),
  ('T -> T DIVIDE F','T',3,'p_T2','MathPi.py',215),
  ('T -> T AND F','T',3,'p_T2','MathPi.py',216),
  ('F -> ID','F',1,'p_F','MathPi.py',222),
  ('F -> NUMBER','F',1,'p_F_NUMBER','MathPi.py',230),
  ('F -> PARL CONDITION PARR','F',3,'p_FtoE','MathPi.py',234),
  ('S -> IF CONDITION AUXCOLON ST ENDIF','S',5,'p_S_IF','MathPi.py',239),
  ('S -> IF CONDITION AUXCOLON ST ELSE COLON AUXQ ST AUXENDIF ENDIF','S',10,'p_S_IF2','MathPi.py',249),
  ('AUXQ -> empty','AUXQ',1,'p_AUXQ','MathPi.py',254),
  ('AUXENDIF -> empty','AUXENDIF',1,'p_AUXENDIF','MathPi.py',265),
  ('S -> WHILE AUXWHILE CONDITION AUXCOLON ST AUXENDWHILE ENDW','S',7,'p_S_WHILE','MathPi.py',276),
  ('AUXWHILE -> empty','AUXWHILE',1,'p_AUXWHILE','MathPi.py',280),
  ('AUXENDWHILE -> empty','AUXENDWHILE',1,'p_AUXENDWHILE','MathPi.py',284),
  ('CONDITION -> UPDATE','CONDITION',1,'p_CONDITION','MathPi.py',348),
  ('CONDITION -> UPDATE NE UPDATE','CONDITION',3,'p_CONDITION2','MathPi.py',352),
  ('CONDITION -> UPDATE GT UPDATE','CONDITION',3,'p_CONDITION2','MathPi.py',353),
  ('CONDITION -> UPDATE LT UPDATE','CONDITION',3,'p_CONDITION2','MathPi.py',354),
  ('CONDITION -> UPDATE EQ UPDATE','CONDITION',3,'p_CONDITION2','MathPi.py',355),
  ('AUXCOLON -> COLON','AUXCOLON',1,'p_AUXCOLON','MathPi.py',361),
  ('empty -> <empty>','empty',0,'p_empty','MathPi.py',376),
]
